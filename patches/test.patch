diff --git a/src/com/truepic/lensverify/data/c2padata/AIStatus.java b/src/com/truepic/lensverify/data/c2padata/assertions/actions/C2PAActionDataMetadata.java
similarity index 78%
rename from src/com/truepic/lensverify/data/c2padata/AIStatus.java
rename to src/com/truepic/lensverify/data/c2padata/assertions/actions/C2PAActionDataMetadata.java
index 1d6b0ad..ee3133c 100644
--- a/src/com/truepic/lensverify/data/c2padata/AIStatus.java
+++ b/src/com/truepic/lensverify/data/c2padata/assertions/actions/C2PAActionDataMetadata.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2024 Truepic
+ * Copyright (c) 2025 Tarun
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy
  * of this software and associated documentation files (the "Software"), to deal
@@ -19,14 +19,13 @@
  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  * SOFTWARE.
  */
-package com.truepic.lensverify.data.c2padata;
+package com.truepic.lensverify.data.c2padata.assertions.actions;
 
-import com.google.gson.annotations.SerializedName;
+public class C2PAActionDataMetadata {
 
-public class AIStatus {
-    @SerializedName("contains_ai")
-    public boolean containsAI;
+    private String dateTime;
 
-    @SerializedName("is_ai_generated")
-    public boolean isAIGenerated;
+    public String getDateTime() {
+        return dateTime;
+    }
 }
diff --git a/src/com/truepic/lensverify/data/c2padata/AIStatus.java b/src/com/truepic/lensverify/data/c2padata/assertions/metadata/Metadata.java
similarity index 70%
copy from src/com/truepic/lensverify/data/c2padata/AIStatus.java
copy to src/com/truepic/lensverify/data/c2padata/assertions/metadata/Metadata.java
index 1d6b0ad..e5da933 100644
--- a/src/com/truepic/lensverify/data/c2padata/AIStatus.java
+++ b/src/com/truepic/lensverify/data/c2padata/assertions/metadata/Metadata.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2024 Truepic
+ * Copyright (c) 2025 Tarun
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy
  * of this software and associated documentation files (the "Software"), to deal
@@ -19,14 +19,23 @@
  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  * SOFTWARE.
  */
-package com.truepic.lensverify.data.c2padata;
+package com.truepic.lensverify.data.c2padata.assertions.metadata;
 
 import com.google.gson.annotations.SerializedName;
+import com.truepic.lensverify.data.c2padata.assertions.DataInstance;
 
-public class AIStatus {
-    @SerializedName("contains_ai")
-    public boolean containsAI;
+public class Metadata extends DataInstance {
+    @SerializedName("data")
+    private MetadataDetails data;
+    @SerializedName("truepic_id")
+    private String truepicId;
 
-    @SerializedName("is_ai_generated")
-    public boolean isAIGenerated;
+    public MetadataDetails getData() {
+        return data;
+    }
+
+    public String getTruepicId() {
+        return truepicId;
+    }
+
 }
diff --git a/src/com/truepic/lensverify/data/c2padata/assertions/metadata/MetadataDetails.java b/src/com/truepic/lensverify/data/c2padata/assertions/metadata/MetadataDetails.java
new file mode 100644
index 0000000..f41465a
--- /dev/null
+++ b/src/com/truepic/lensverify/data/c2padata/assertions/metadata/MetadataDetails.java
@@ -0,0 +1,99 @@
+/*
+ * Copyright (c) 2025 Truepic
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+ * SOFTWARE.
+ */
+package com.truepic.lensverify.data.c2padata.assertions.metadata;
+
+import com.google.gson.annotations.SerializedName;
+
+import java.util.Map;
+
+public class MetadataDetails {
+
+    @SerializedName("@context")
+    private Map<String, String> context;
+
+    @SerializedName(value = "EXIF:GPSLongitude", alternate = {"exif:GPSLongitude", "exif:gpslongitude"})
+    private String longitude;
+
+    @SerializedName(value = "EXIF:GPSLatitude", alternate = {"exif:GPSLatitude", "exif:gpslatitude"})
+    private String latitude;
+
+    @SerializedName(value = "EXIF:Make", alternate = {"exif:Make", "exif:make", "tiff:Make"})
+    private String make;
+
+    @SerializedName(value = "EXIF:Model", alternate = {"exif:Model", "tiff:Model", "tiff:model"})
+    private String model;
+
+    @SerializedName(value = "EXIF:GPSAltitude", alternate = {"exif:GPSAltitude", "exif:gpsaltitude"})
+    private String gpsAltitude;
+
+    @SerializedName(value = "EXIF:GPSHorizontalAccuracy", alternate = {"exif:GPSHorizontalAccuracy", "exif:gpshorizontalaccuracy"})
+    private String gpsAccuracy;
+
+    @SerializedName(value = "EXIF:GPSTimeStamp", alternate = {"exif:GPSTimeStamp", "exif:gpstimestamp"})
+    private String gpsTimestamp;
+
+    @SerializedName(value = "EXIF:DateTimeOriginal", alternate = {"exif:DateTimeOriginal", "exif:datetimeoriginal"})
+    private String dateTimeOriginal;
+
+    @SerializedName("truepic_id")
+    private String truepicId;
+
+    public String getLongitude() {
+        return longitude;
+    }
+
+    public String getLatitude() {
+        return latitude;
+    }
+
+    public String getMake() {
+        return make;
+    }
+
+    public String getModel() {
+        return model;
+    }
+
+    public String getGPSAltitude() {
+        return gpsAltitude;
+    }
+
+    public String getGPSAccuracy() {
+        return gpsAccuracy;
+    }
+
+    public String getGPSTimestamp() {
+        return gpsTimestamp;
+    }
+
+    public Map<String, String> getContext() {
+        return context;
+    }
+
+    public String getTruepicId() {
+        return truepicId;
+    }
+
+    public String getDateTimeOriginal() {
+        return dateTimeOriginal;
+    }
+}
